{"filter":false,"title":"smtp.js","tooltip":"/server/smtp.js","undoManager":{"mark":59,"position":59,"stack":[[{"start":{"row":11,"column":24},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":4},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":18,"column":42},"action":"insert","lines":["crypto    = Meteor.npmRequire('crypto');","elliptic  = Meteor.npmRequire('elliptic');","ripemd160 = Meteor.npmRequire('ripemd160');","request   = Meteor.npmRequire('request');","bs58check = Meteor.npmRequire('bs58check');","P         = Meteor.npmRequire('bluebird');"],"id":4}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":5},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":18,"column":46},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":19,"column":4},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":16},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":20,"column":4},"end":{"row":173,"column":0},"action":"insert","lines":["","    function generateWalletAddress(options) {","      options = options || {};","    ","      var keys = generateKeyPair(options.scheme || 'ed25519');","      var address = deriveWalletAddress(keys.public, options.type);","      var statement = createAddressRegistrationStatement(address, keys, options);","    ","      return {","        address: address,","        keys: keys,","        statement: statement","      }","    }","","    function generateCurrencyIssuer(options) {","      options = options || {};","      options.type = 'issuer';","    ","      return generateWalletAddress(options);","    }","","    function generateTransactionRequest(signer, transaction, options) {","      var iou = {","        amt: transaction.amount,","        cur: transaction.currency,","        sub: signer.address,","        aud: transaction.destination,","        nce: Math.floor(Math.random() * 1000000000)","      };","","        return createTransactionRequestStatement(signer, iou, options);","    }","","    function registerWalletAddress() {","    ","    }","    ","    function registerCurrencyIssuer() {","      ","    }","    ","    function registerTransactionRequest() {","    ","    }","    ","    function checkAddressBalance() {","    ","    }","","/*--------------------------------------------------------------------------------*/","","    var hashes = ['sha256', 'sha512'];","    var schemes = {","      'ed25519': new elliptic.ec('ed25519'),","      'secp256k1': new elliptic.ec('secp256k1')","    };","","    function generateKeyPair(scheme) {","      var keypair;","      var keys;","    ","      switch (scheme) {","        case 'ed25519':","        case 'secp256k1':","          keypair = schemes[scheme].genKeyPair();","          keys = {","            scheme: scheme,","            private: keypair.getPrivate('hex'),","            public: keypair.getPublic('hex')","          };","          break;","        default:","          return P.reject('invalid-scheme');","          break;","      }","    ","      return keys;","    }","","    function deriveWalletAddress(publicKey, type) {","      var keyBuffer = new Buffer(publicKey, 'hex');","      var firstHash = crypto.createHash('sha256').update(keyBuffer).digest();","      var secondHash = ripemd160(firstHash);","      var extendedHash = (type === 'issuer' ? '57' : '87') + secondHash.toString('hex');","      var base58Public = bs58check.encode(new Buffer(extendedHash, 'hex'));","    ","      return base58Public;","    }","","    function createAddressRegistrationStatement(address, keys, options) {","      options = options || {};","    ","      var jws = {","        hash: {","          type: (hashes.indexOf(options.hash) > -1) ? options.hash : 'sha256',","          value: ''","        },","        payload: {","          address: address,","          keys: [","            keys.public","          ],","          threshold: 1","        },","        signatures: [","          {","            header: {","              alg: keys.scheme,","              kid: '0'","            },","            signature: ''","          }","        ]","      };","","      jws.hash.value = crypto.createHash(jws.hash.type)","        .update(JSON.stringify(jws.payload)).digest('hex');","    ","      jws.signatures[0].signature = schemes[keys.scheme]","        .sign(jws.hash.value, keys.private, 'hex').toDER('hex');","    ","      return jws;","    }","","    function createTransactionRequestStatement(signer, iou, options) {","      options = options || {};","    ","      var jws = {","        hash: {","          type: (hashes.indexOf(options.hash) > -1) ? options.hash : 'sha256',","          value: ''","        },","        payload: iou,","        signatures: [","          {","            header: {","              alg: signer.keys.scheme,","              kid: '0'","            },","            signature: ''","          }","        ]","      };","    ","      jws.hash.value = crypto.createHash(jws.hash.type)","        .update(JSON.stringify(jws.payload)).digest('hex');","    ","      jws.signatures[0].signature = schemes[signer.keys.scheme]","        .sign(jws.hash.value, signer.keys.private, 'hex').toDER('hex');","    ","      return jws;","    }",""],"id":17}],[{"start":{"row":13,"column":3},"end":{"row":174,"column":0},"action":"remove","lines":[" crypto    = Meteor.npmRequire('crypto');","    elliptic  = Meteor.npmRequire('elliptic');","    ripemd160 = Meteor.npmRequire('ripemd160');","    request   = Meteor.npmRequire('request');","    bs58check = Meteor.npmRequire('bs58check');","    P         = Meteor.npmRequire('bluebird');","    ","    ","    function generateWalletAddress(options) {","      options = options || {};","    ","      var keys = generateKeyPair(options.scheme || 'ed25519');","      var address = deriveWalletAddress(keys.public, options.type);","      var statement = createAddressRegistrationStatement(address, keys, options);","    ","      return {","        address: address,","        keys: keys,","        statement: statement","      }","    }","","    function generateCurrencyIssuer(options) {","      options = options || {};","      options.type = 'issuer';","    ","      return generateWalletAddress(options);","    }","","    function generateTransactionRequest(signer, transaction, options) {","      var iou = {","        amt: transaction.amount,","        cur: transaction.currency,","        sub: signer.address,","        aud: transaction.destination,","        nce: Math.floor(Math.random() * 1000000000)","      };","","        return createTransactionRequestStatement(signer, iou, options);","    }","","    function registerWalletAddress() {","    ","    }","    ","    function registerCurrencyIssuer() {","      ","    }","    ","    function registerTransactionRequest() {","    ","    }","    ","    function checkAddressBalance() {","    ","    }","","/*--------------------------------------------------------------------------------*/","","    var hashes = ['sha256', 'sha512'];","    var schemes = {","      'ed25519': new elliptic.ec('ed25519'),","      'secp256k1': new elliptic.ec('secp256k1')","    };","","    function generateKeyPair(scheme) {","      var keypair;","      var keys;","    ","      switch (scheme) {","        case 'ed25519':","        case 'secp256k1':","          keypair = schemes[scheme].genKeyPair();","          keys = {","            scheme: scheme,","            private: keypair.getPrivate('hex'),","            public: keypair.getPublic('hex')","          };","          break;","        default:","          return P.reject('invalid-scheme');","          break;","      }","    ","      return keys;","    }","","    function deriveWalletAddress(publicKey, type) {","      var keyBuffer = new Buffer(publicKey, 'hex');","      var firstHash = crypto.createHash('sha256').update(keyBuffer).digest();","      var secondHash = ripemd160(firstHash);","      var extendedHash = (type === 'issuer' ? '57' : '87') + secondHash.toString('hex');","      var base58Public = bs58check.encode(new Buffer(extendedHash, 'hex'));","    ","      return base58Public;","    }","","    function createAddressRegistrationStatement(address, keys, options) {","      options = options || {};","    ","      var jws = {","        hash: {","          type: (hashes.indexOf(options.hash) > -1) ? options.hash : 'sha256',","          value: ''","        },","        payload: {","          address: address,","          keys: [","            keys.public","          ],","          threshold: 1","        },","        signatures: [","          {","            header: {","              alg: keys.scheme,","              kid: '0'","            },","            signature: ''","          }","        ]","      };","","      jws.hash.value = crypto.createHash(jws.hash.type)","        .update(JSON.stringify(jws.payload)).digest('hex');","    ","      jws.signatures[0].signature = schemes[keys.scheme]","        .sign(jws.hash.value, keys.private, 'hex').toDER('hex');","    ","      return jws;","    }","","    function createTransactionRequestStatement(signer, iou, options) {","      options = options || {};","    ","      var jws = {","        hash: {","          type: (hashes.indexOf(options.hash) > -1) ? options.hash : 'sha256',","          value: ''","        },","        payload: iou,","        signatures: [","          {","            header: {","              alg: signer.keys.scheme,","              kid: '0'","            },","            signature: ''","          }","        ]","      };","    ","      jws.hash.value = crypto.createHash(jws.hash.type)","        .update(JSON.stringify(jws.payload)).digest('hex');","    ","      jws.signatures[0].signature = schemes[signer.keys.scheme]","        .sign(jws.hash.value, signer.keys.private, 'hex').toDER('hex');","    ","      return jws;","    }","",""],"id":18}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":74},"action":"insert","lines":["<script type='text/javascript'> wallet = require('sdk-node'); </script>"],"id":19}],[{"start":{"row":13,"column":73},"end":{"row":13,"column":74},"action":"remove","lines":[">"],"id":20}],[{"start":{"row":13,"column":72},"end":{"row":13,"column":73},"action":"remove","lines":["t"],"id":21}],[{"start":{"row":13,"column":71},"end":{"row":13,"column":72},"action":"remove","lines":["p"],"id":22}],[{"start":{"row":13,"column":70},"end":{"row":13,"column":71},"action":"remove","lines":["i"],"id":23}],[{"start":{"row":13,"column":69},"end":{"row":13,"column":70},"action":"remove","lines":["r"],"id":24}],[{"start":{"row":13,"column":68},"end":{"row":13,"column":69},"action":"remove","lines":["c"],"id":25}],[{"start":{"row":13,"column":67},"end":{"row":13,"column":68},"action":"remove","lines":["s"],"id":26}],[{"start":{"row":13,"column":66},"end":{"row":13,"column":67},"action":"remove","lines":["/"],"id":27}],[{"start":{"row":13,"column":65},"end":{"row":13,"column":66},"action":"remove","lines":["<"],"id":28}],[{"start":{"row":13,"column":64},"end":{"row":13,"column":65},"action":"remove","lines":[" "],"id":29}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":35},"action":"remove","lines":["<script type='text/javascript'> "],"id":30}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":19},"action":"remove","lines":["require"],"id":31},{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["M"]}],[{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":["e"],"id":32}],[{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"insert","lines":["t"],"id":33}],[{"start":{"row":13,"column":15},"end":{"row":13,"column":16},"action":"insert","lines":["e"],"id":34}],[{"start":{"row":13,"column":16},"end":{"row":13,"column":17},"action":"insert","lines":["o"],"id":35}],[{"start":{"row":13,"column":17},"end":{"row":13,"column":18},"action":"insert","lines":["r"],"id":36}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"insert","lines":["."],"id":37}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":20},"action":"insert","lines":["n"],"id":38}],[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["p"],"id":39}],[{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":["m"],"id":40}],[{"start":{"row":13,"column":22},"end":{"row":13,"column":23},"action":"insert","lines":["R"],"id":41}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":23},"action":"remove","lines":["npmR"],"id":42},{"start":{"row":13,"column":19},"end":{"row":13,"column":29},"action":"insert","lines":["npmRequire"]}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["/"],"id":43}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["/"],"id":44}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"remove","lines":["/"],"id":45}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"remove","lines":["/"],"id":46}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["v"],"id":47}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["a"],"id":48}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"remove","lines":["a"],"id":49}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"remove","lines":["v"],"id":50}],[{"start":{"row":13,"column":31},"end":{"row":13,"column":39},"action":"remove","lines":["sdk-node"],"id":51},{"start":{"row":13,"column":31},"end":{"row":13,"column":32},"action":"insert","lines":["w"]}],[{"start":{"row":13,"column":32},"end":{"row":13,"column":33},"action":"insert","lines":["e"],"id":52}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"insert","lines":["b"],"id":53}],[{"start":{"row":13,"column":34},"end":{"row":13,"column":35},"action":"insert","lines":["w"],"id":54}],[{"start":{"row":13,"column":31},"end":{"row":13,"column":35},"action":"remove","lines":["webw"],"id":55},{"start":{"row":13,"column":31},"end":{"row":13,"column":40},"action":"insert","lines":["webwallet"]}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":43},"action":"remove","lines":["wallet = Meteor.npmRequire('webwallet');"],"id":56}],[{"start":{"row":11,"column":24},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":57},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":4},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":58},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":44},"action":"insert","lines":["wallet = Meteor.npmRequire('webwallet');"],"id":59}],[{"start":{"row":13,"column":13},"end":{"row":13,"column":44},"action":"remove","lines":["Meteor.npmRequire('webwallet');"],"id":60},{"start":{"row":13,"column":13},"end":{"row":13,"column":41},"action":"insert","lines":["Meteor.npmRequire('github');"]}],[{"start":{"row":13,"column":32},"end":{"row":13,"column":38},"action":"remove","lines":["github"],"id":61},{"start":{"row":13,"column":32},"end":{"row":13,"column":33},"action":"insert","lines":["w"]}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"insert","lines":["e"],"id":62}],[{"start":{"row":13,"column":34},"end":{"row":13,"column":35},"action":"insert","lines":["b"],"id":63}],[{"start":{"row":13,"column":32},"end":{"row":13,"column":35},"action":"remove","lines":["web"],"id":64},{"start":{"row":13,"column":32},"end":{"row":13,"column":41},"action":"insert","lines":["webwallet"]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["/"],"id":65}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["/"],"id":66}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["/"],"id":67}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"remove","lines":["/"],"id":68}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["/"],"id":69}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["/"],"id":70}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":6},"end":{"row":13,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1461116951141,"hash":"486cbbb9a76fa17fd185b58b7e060dd4a38cef27"}